{"version":3,"sources":["components/Timer/styles.module.scss","components/Clock/styles.module.scss","components/Button/styles.module.scss","components/Input/styles.module.scss","components/App/styles.module.scss","components/Button/index.tsx","components/Clock/index.tsx","components/Input/index.tsx","hooks/useTimer/index.ts","components/Timer/usePomodoroTimersSetup/reducer.ts","components/Timer/usePomodoroTimersSetup/actions.ts","components/Timer/usePomodoroTimersSetup/index.ts","utils/constants.ts","hooks/useCarousel/index.ts","components/Timer/index.tsx","components/App/index.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Button","children","onClick","ref","React","e","current","blur","className","styles","Clock","timeLeft","initialTime","dashArray","calculateTimeFraction","viewBox","xmlns","cx","cy","r","strokeDasharray","toFixed","data-testid","d","totalSeconds","hours","Math","floor","filter","time","i","map","n","toString","join","formatTime","TimeInput","initialValue","onChange","value","setValue","localOnChange","event","minutes","currentTarget","Number","classnames","type","min","max","useTimer","useState","currentTime","setCurrentTime","isOn","setIsOn","isFinished","setIsFinished","useEffect","interval","setInterval","t","clearInterval","toggle","useCallback","o","timeReducer","state","action","Object","assign","workTime","shortBreakTime","longBreakTime","initialState","usePomodoroTimersSetup","dispatch","onWorkTimeChange","onShortBreakTimeChange","onLongBreakTimeChange","useCarousel","items","index","setIndex","next","newIndex","length","Timer","preventDefault","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.70329699.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"timer\":\"styles_timer__3thNU\",\"timer__label\":\"styles_timer__label__1Ugk-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clock\":\"styles_clock__2_xsk\",\"clock__label\":\"styles_clock__label__3jvFx\",\"clock__circle\":\"styles_clock__circle__3bClP\",\"clock__path\":\"styles_clock__path__1xyVs\",\"clock__path-remaining\":\"styles_clock__path-remaining__K7WQA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__12U2K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"styles_input__33MKN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"styles_app__1jJpR\"};","import * as React from 'react';\nimport styles from './styles.module.scss';\n\ninterface IButtonProps {\n\tchildren: React.ReactNode;\n\tonClick: (event: React.MouseEvent) => void;\n}\n\nconst Button: React.FunctionComponent<IButtonProps> = ({\n\tchildren,\n\tonClick\n}) => {\n\tconst ref = React.useRef<HTMLButtonElement>(null);\n\n\tconst localOnClick = (e: React.MouseEvent) => {\n\t\tonClick(e);\n\t\tref.current?.blur();\n\t};\n\n\treturn (\n\t\t<button onClick={localOnClick} className={styles['button']} ref={ref}>\n\t\t\t{children}\n\t\t</button>\n\t);\n};\n\nexport default Button;\n","import * as React from 'react';\nimport styles from './styles.module.scss';\n\ninterface IClockProps {\n\ttimeLeft?: number;\n\tinitialTime?: number;\n}\n\nconst FULL_DASH_ARRAY = 283;\n\nconst calculateTimeFraction = (\n\tinitialTime: number,\n\ttimeLeft: number\n): number => {\n\tconst rawTimeFraction = (initialTime - timeLeft) / initialTime;\n\n\treturn rawTimeFraction;\n};\n\nconst formatTime = (totalSeconds: number): string => {\n\tconst hours: number = Math.floor(totalSeconds / 3600);\n\tconst minutes: number = Math.floor(totalSeconds / 60) - hours * 60;\n\tconst seconds: number = Math.floor(totalSeconds % 60);\n\n\tconst formattedTime = [hours, minutes, seconds]\n\t\t.filter((time, i) => !(i === 0 && time === 0))\n\t\t.map((n: number) => (n > 9 ? n.toString() : `0${n}`))\n\t\t.join(':');\n\n\treturn formattedTime;\n};\n\nconst Clock: React.FunctionComponent<IClockProps> = ({\n\ttimeLeft,\n\tinitialTime\n}) => {\n\tconst dashArray: number =\n\t\tinitialTime && timeLeft\n\t\t\t? calculateTimeFraction(initialTime, timeLeft) * FULL_DASH_ARRAY\n\t\t\t: 0;\n\n\treturn (\n\t\t<div className={styles['clock']}>\n\t\t\t<svg viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t<g className={styles['clock__circle']}>\n\t\t\t\t\t<circle\n\t\t\t\t\t\tclassName={styles['clock__path']}\n\t\t\t\t\t\tcx=\"50\"\n\t\t\t\t\t\tcy=\"50\"\n\t\t\t\t\t\tr=\"45\"\n\t\t\t\t\t></circle>\n\t\t\t\t\t<path\n\t\t\t\t\t\tstrokeDasharray={`${dashArray.toFixed(0)} ${FULL_DASH_ARRAY}`}\n\t\t\t\t\t\tclassName={styles['clock__path-remaining']}\n\t\t\t\t\t\tdata-testid=\"clock-remaining-time\"\n\t\t\t\t\t\td=\"\n\t\t\t\t\t\t\tM 50, 50\n\t\t\t\t\t\t\tm -45, 0\n\t\t\t\t\t\t\ta 45,45 0 1,0 90,0\n\t\t\t\t\t\t\ta 45,45 0 1,0 -90,0\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t></path>\n\t\t\t\t</g>\n\t\t\t</svg>\n\t\t\t<span className={styles['clock__label']} data-testid=\"clock-label\">\n\t\t\t\t{timeLeft ? formatTime(timeLeft) : '-'}\n\t\t\t</span>\n\t\t</div>\n\t);\n};\n\nexport default Clock;\n","import * as React from 'react';\nimport classnames from 'classnames';\nimport styles from './styles.module.scss';\n\ninterface ITimeInputProps {\n\tinitialValue?: number;\n\tonChange: (minutes: number) => void;\n\tclassName?: string;\n}\n\nconst TimeInput: React.FunctionComponent<ITimeInputProps> = ({\n\tinitialValue = 0,\n\tonChange,\n\tclassName\n}) => {\n\tconst [value, setValue] = React.useState<number>(initialValue);\n\n\tconst localOnChange = React.useCallback(\n\t\t(event: React.FormEvent<HTMLInputElement>) => {\n\t\t\tconst minutes =\n\t\t\t\tevent.currentTarget.value !== ''\n\t\t\t\t\t? Number(event.currentTarget.value)\n\t\t\t\t\t: 0;\n\t\t\tsetValue(minutes);\n\t\t\tonChange(minutes);\n\t\t},\n\t\t[setValue, onChange]\n\t);\n\n\treturn (\n\t\t<input\n\t\t\tclassName={classnames(styles['input'], className)}\n\t\t\ttype=\"number\"\n\t\t\tmin=\"0\"\n\t\t\tmax=\"60\"\n\t\t\tvalue={value.toString()}\n\t\t\tonChange={localOnChange}\n\t\t/>\n\t);\n};\n\nexport default TimeInput;\n","import React from 'react';\n\nexport interface ITimerState {\n\tisFinished: boolean;\n\tcurrentTime: number;\n\ttoggle: () => void;\n}\n\nconst second = 1000;\n\nconst useTimer = (time: number): ITimerState => {\n\tconst [currentTime, setCurrentTime] = React.useState<number>(time);\n\tconst [isOn, setIsOn] = React.useState<boolean>(false);\n\tconst [isFinished, setIsFinished] = React.useState<boolean>(false);\n\n\tReact.useEffect(() => {\n\t\tsetCurrentTime(time);\n\t}, [time, setCurrentTime]);\n\n\tReact.useEffect(() => {\n\t\tif (isOn) {\n\t\t\tconst interval = setInterval(() => {\n\t\t\t\tsetCurrentTime((t: number): number => --t);\n\t\t\t}, second);\n\n\t\t\treturn () => {\n\t\t\t\tclearInterval(interval);\n\t\t\t};\n\t\t}\n\t}, [isOn, setCurrentTime]);\n\n\tReact.useEffect(() => {\n\t\tif (currentTime === 0) {\n\t\t\tsetIsOn(false);\n\t\t\tsetIsFinished(true);\n\t\t}\n\t}, [currentTime, setIsOn, setIsFinished]);\n\n\tconst toggle = React.useCallback(() => {\n\t\tif (isFinished) {\n\t\t\tsetIsFinished(false);\n\t\t}\n\t\tsetIsOn((o: boolean) => !o);\n\t}, [isFinished]);\n\n\treturn {\n\t\tisFinished,\n\t\ttoggle,\n\t\tcurrentTime\n\t};\n};\n\nexport default useTimer;\n","import {\n\t/* eslint-disable-next-line no-unused-vars */\n\tTimeAction,\n\tSET_WORK_TIME,\n\tSET_SHORT_BREAK_TIME,\n\tSET_LONG_BREAK_TIME\n} from './actions';\n\nexport interface ITimerSetupState {\n\tworkTime: number;\n\tshortBreakTime: number;\n\tlongBreakTime: number;\n}\n\nconst timeReducer = (state: ITimerSetupState, action: TimeAction) => {\n\tswitch (action.type) {\n\t\tcase SET_WORK_TIME:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tworkTime: action.time\n\t\t\t});\n\t\tcase SET_SHORT_BREAK_TIME:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tshortBreakTime: action.time\n\t\t\t});\n\t\tcase SET_LONG_BREAK_TIME:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tlongBreakTime: action.time\n\t\t\t});\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default timeReducer;\n","export const SET_WORK_TIME = 'SET_WORK_TIME';\nexport const SET_SHORT_BREAK_TIME = 'SET_SHORT_BREAK_TIME';\nexport const SET_LONG_BREAK_TIME = 'SET_LONG_BREAK_TIME';\n\nexport interface TimeAction {\n\ttype: string;\n\ttime: number;\n}\n","import * as React from 'react';\n/* eslint-disable-next-line no-unused-vars */\nimport timeReducer, { ITimerSetupState } from './reducer';\nimport {\n\tSET_WORK_TIME,\n\tSET_SHORT_BREAK_TIME,\n\tSET_LONG_BREAK_TIME\n} from './actions';\nimport { minute } from 'utils/constants';\n\ninterface IPomodoroSetup {\n\tstate: ITimerSetupState;\n\tonWorkTimeChange: (minutes: number) => void;\n\tonShortBreakTimeChange: (minutes: number) => void;\n\tonLongBreakTimeChange: (minutes: number) => void;\n}\n\nconst initialState: ITimerSetupState = {\n\tworkTime: 50 * minute,\n\tlongBreakTime: 30 * minute,\n\tshortBreakTime: 10 * minute\n};\n\nconst usePomodoroTimersSetup = (): IPomodoroSetup => {\n\tconst [state, dispatch] = React.useReducer(timeReducer, initialState);\n\n\tconst onWorkTimeChange = React.useCallback((minutes: number): void => {\n\t\tdispatch({ type: SET_WORK_TIME, time: minutes * minute });\n\t}, []);\n\n\tconst onShortBreakTimeChange = React.useCallback((minutes: number): void => {\n\t\tdispatch({ type: SET_SHORT_BREAK_TIME, time: minutes * minute });\n\t}, []);\n\n\tconst onLongBreakTimeChange = React.useCallback((minutes: number): void => {\n\t\tdispatch({ type: SET_LONG_BREAK_TIME, time: minutes * minute });\n\t}, []);\n\n\treturn {\n\t\tstate,\n\t\tonWorkTimeChange,\n\t\tonShortBreakTimeChange,\n\t\tonLongBreakTimeChange\n\t};\n};\n\nexport default usePomodoroTimersSetup;\n","export const minute: number = 60;\n","import * as React from 'react';\n\ninterface ICarouselIterator<T> {\n\tcurrent: T;\n\tnext(): void;\n}\n\nfunction useCarousel<T>(items: Array<T>): ICarouselIterator<T> {\n\tconst [index, setIndex] = React.useState<number>(0);\n\n\tconst next = React.useCallback(() => {\n\t\tlet newIndex = 0;\n\n\t\tif (index + 1 > items.length - 1) {\n\t\t\tsetIndex(newIndex);\n\t\t} else {\n\t\t\tnewIndex = index + 1;\n\t\t\tsetIndex(newIndex);\n\t\t}\n\t}, [index, setIndex, items]);\n\n\treturn {\n\t\tcurrent: items[index],\n\t\tnext\n\t};\n}\n\nexport default useCarousel;\n","import * as React from 'react';\nimport Button from 'components/Button';\nimport Clock from 'components/Clock';\nimport TimeInput from 'components/Input';\nimport useTimer from 'hooks/useTimer';\nimport { minute } from 'utils/constants';\nimport usePomodoroTimersSetup from './usePomodoroTimersSetup';\nimport styles from './styles.module.scss';\nimport useCarousel from 'hooks/useCarousel';\n\ninterface ITimerProps {}\n\nconst Timer: React.FunctionComponent<ITimerProps> = () => {\n\tconst {\n\t\tstate,\n\t\tonWorkTimeChange,\n\t\tonShortBreakTimeChange,\n\t\tonLongBreakTimeChange\n\t} = usePomodoroTimersSetup();\n\n\tconst { current: initialTime, next } = useCarousel([\n\t\tstate.workTime,\n\t\tstate.shortBreakTime,\n\t\tstate.workTime,\n\t\tstate.longBreakTime\n\t]);\n\tconst { currentTime, toggle, isFinished } = useTimer(initialTime);\n\n\tReact.useEffect(() => {\n\t\tif (isFinished) {\n\t\t\tnext();\n\t\t\ttoggle();\n\t\t}\n\t}, [isFinished, next, toggle]);\n\n\tconst onClick = React.useCallback(\n\t\t(e: React.MouseEvent): void => {\n\t\t\te.preventDefault();\n\t\t\ttoggle();\n\t\t},\n\t\t[toggle]\n\t);\n\n\treturn (\n\t\t<div className={styles['timer']}>\n\t\t\t<Clock timeLeft={currentTime} initialTime={initialTime} />\n\t\t\t<label className={styles['timer__label']}>\n\t\t\t\tWork [min]\n\t\t\t\t<TimeInput\n\t\t\t\t\tclassName={styles['timer__input']}\n\t\t\t\t\tinitialValue={state.workTime / minute}\n\t\t\t\t\tonChange={onWorkTimeChange}\n\t\t\t\t/>\n\t\t\t</label>\n\t\t\t<label className={styles['timer__label']}>\n\t\t\t\tShort break [min]\n\t\t\t\t<TimeInput\n\t\t\t\t\tclassName={styles['timer__input']}\n\t\t\t\t\tinitialValue={state.shortBreakTime / minute}\n\t\t\t\t\tonChange={onShortBreakTimeChange}\n\t\t\t\t/>\n\t\t\t</label>\n\t\t\t<label className={styles['timer__label']}>\n\t\t\t\tLong break [min]\n\t\t\t\t<TimeInput\n\t\t\t\t\tclassName={styles['timer__input']}\n\t\t\t\t\tinitialValue={state.longBreakTime / minute}\n\t\t\t\t\tonChange={onLongBreakTimeChange}\n\t\t\t\t/>\n\t\t\t</label>\n\t\t\t<Button onClick={onClick}>START</Button>\n\t\t</div>\n\t);\n};\n\nexport default Timer;\n","import React from 'react';\nimport Timer from 'components/Timer';\nimport styles from './styles.module.scss';\n\nfunction App() {\n\treturn (\n\t\t<div className={styles['app']}>\n\t\t\t<Timer />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' }\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then(registration => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/index';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}
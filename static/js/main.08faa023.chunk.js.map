{"version":3,"sources":["components/Clock/styles.module.scss","components/TimerSetup/styles.module.scss","components/Totoro/styles.module.scss","components/Timer/styles.module.scss","components/Button/styles.module.scss","hooks/useNotificationSound/info.mp3","components/TimeInput/styles.module.scss","components/Totoro/images/work.gif","components/Totoro/images/break.gif","components/Totoro/images/long-break.gif","components/App/styles.module.scss","components/Button/index.tsx","components/Clock/index.tsx","hooks/useTimer/index.ts","hooks/usePomodoroTimersSetup/reducer.ts","hooks/usePomodoroTimersSetup/actions.ts","hooks/usePomodoroTimersSetup/index.ts","utils/constants.ts","hooks/useNotificationSound/index.ts","hooks/useCarousel/index.ts","components/Totoro/index.tsx","components/TimeInput/index.tsx","components/TimerSetup/index.tsx","components/Timer/index.tsx","components/App/index.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Button","children","onClick","className","ref","React","e","current","blur","classNames","styles","Clock","timeLeft","initialTime","isRunning","dashArray","calculateTimeFraction","viewBox","xmlns","cx","cy","r","strokeDasharray","toFixed","data-testid","d","totalSeconds","hours","Math","floor","filter","time","i","map","n","toString","join","formatTime","useTimer","useState","currentTime","setCurrentTime","isOn","setIsOn","isFinished","setIsFinished","useEffect","interval","setInterval","t","clearInterval","toggle","useCallback","o","reset","timeReducer","state","action","type","Object","assign","workTime","shortBreakTime","longBreakTime","initialState","usePomodoroTimersSetup","dispatch","timerConfiguration","onWorkTimeChange","minutes","onShortBreakTimeChange","onLongBreakTimeChange","sound","Audio","info","useNotificationSound","play","useCarousel","TotoroState","items","index","setIndex","next","newIndex","length","restart","TimeInput","initialValue","onChange","testId","value","setValue","localOnChange","event","currentTarget","Number","min","max","TimerSetup","visible","getImage","Break","LongBreak","Work","Totoro","hidden","changing","setChanging","debouncedState","setDebouncedState","stateInterval","setTimeout","changeInterval","src","Timer","preventDefault","getTotoroState","Error","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,iBAAiB,+BAA+B,aAAe,6BAA6B,uBAAuB,qCAAqC,cAAgB,8BAA8B,YAAc,4BAA4B,oBAAoB,kCAAkC,wBAAwB,sCAAsC,8BAA8B,8C,gBCAlbD,EAAOC,QAAU,CAAC,cAAc,4BAA4B,4BAA4B,0CAA0C,qBAAqB,qC,gBCAvJD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,iBAAiB,+BAA+B,mBAAmB,iCAAiC,OAAS,yB,gBCA/JD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,cAAgB,gC,kBCAhED,EAAOC,QAAU,CAAC,OAAS,yB,gBCD3BD,EAAOC,QAAU,IAA0B,kC,gBCC3CD,EAAOC,QAAU,CAAC,MAAQ,wB,gBCD1BD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCC3CD,EAAOC,QAAU,CAAC,IAAM,sB,gKCgCTC,EAvBuC,SAAC,GAIhD,IAHNC,EAGK,EAHLA,SACAC,EAEK,EAFLA,QACAC,EACK,EADLA,UAEMC,EAAMC,SAAgC,MAO5C,OACC,0BACCH,QAPmB,SAACI,GAAyB,IAAD,EAC7CJ,EAAQI,GACR,UAAAF,EAAIG,eAAJ,SAAaC,QAMZL,UAAWM,IAAWC,IAAM,OAAYP,GACxCC,IAAKA,GAEJH,I,uBC8DWU,EAvDqC,SAAC,GAK9C,IAJNC,EAIK,EAJLA,SACAC,EAGK,EAHLA,YACAC,EAEK,EAFLA,UACAb,EACK,EADLA,SAEMc,EACLF,GAAeD,EA/BO,IAEM,SAC7BC,EACAD,GAIA,OAFyBC,EAAcD,GAAYC,EA0B/CG,CAAsBH,EAAaD,GACnC,EAEJ,OACC,uBACCT,UAAWM,IAAWC,IAAM,MAAP,eACnBA,IAAO,kBAAoBI,KAG7B,uBAAKG,QAAQ,cAAcC,MAAM,8BAChC,qBAAGf,UAAWO,IAAM,eACnB,0BACCP,UAAWM,IAAWC,IAAM,YAAP,eACnBA,IAAO,qBAAuBI,IAEhCK,GAAG,KACHC,GAAG,KACHC,EAAE,OAEH,wBACCC,gBAAe,UAAKP,EAAUQ,QAAQ,GAAvB,YApDG,KAqDlBpB,UAAWM,IAAWC,IAAO,yBAAR,eACnBA,IAAO,+BAAiCI,IAE1CU,cAAY,uBACZC,EAAE,iEASJxB,EACD,wBACCE,UAAWM,IAAWC,IAAM,aAAP,eACnBA,IAAO,wBAA0BI,IAEnCU,cAAY,eAEXZ,EA9Dc,SAACc,GACnB,IAAMC,EAAgBC,KAAKC,MAAMH,EAAe,MAShD,MALsB,CAACC,EAHCC,KAAKC,MAAMH,EAAe,IAAc,GAARC,EAChCC,KAAKC,MAAMH,EAAe,KAGhDI,QAAO,SAACC,EAAMC,GAAP,QAAqB,IAANA,GAAoB,IAATD,MACjCE,KAAI,SAACC,GAAD,OAAgBA,EAAI,EAAIA,EAAEC,WAAV,WAA2BD,MAC/CE,KAAK,KAsDQC,CAAWzB,GAAY,O,OCtBxB0B,EAlDE,SAACP,GAA+B,IAAD,EACT1B,IAAMkC,SAAiBR,GADd,mBACxCS,EADwC,KAC3BC,EAD2B,OAEvBpC,IAAMkC,UAAkB,GAFD,mBAExCG,EAFwC,KAElCC,EAFkC,OAGXtC,IAAMkC,UAAkB,GAHb,mBAGxCK,EAHwC,KAG5BC,EAH4B,KAK/CxC,IAAMyC,WAAU,WACfL,EAAeV,KACb,CAACA,EAAMU,IAEVpC,IAAMyC,WAAU,WACf,IAAIC,EAMJ,OALIL,IACHK,EAAWC,aAAY,WACtBP,GAAe,SAACQ,GAAD,OAAuBA,EAAI,OAf/B,MAkBN,WACNC,cAAcH,MAEb,CAACL,EAAMD,IAEVpC,IAAMyC,WAAU,WACK,IAAhBN,IACHG,GAAQ,GACRE,GAAc,MAEb,CAACL,EAAaG,EAASE,IAE1B,IAAMM,EAAS9C,IAAM+C,aAAY,WAC5BR,GACHC,GAAc,GAEfF,GAAQ,SAACU,GAAD,OAAiBA,OACvB,CAACT,IAEEU,EAAQjD,IAAM+C,aAAY,WAC/BX,EAAeV,GACfY,GAAQ,GACRE,GAAc,KACZ,CAACF,EAASE,EAAeJ,EAAgBV,IAE5C,MAAO,CACNa,aACAU,QACAH,SACAX,cACAE,SCzBaa,EAnBK,SAACC,EAAyBC,GAC7C,OAAQA,EAAOC,MACd,IChB2B,gBDiB1B,OAAOC,OAAOC,OAAO,GAAIJ,EAAO,CAC/BK,SAAUJ,EAAO1B,OAEnB,ICnBkC,uBDoBjC,OAAO4B,OAAOC,OAAO,GAAIJ,EAAO,CAC/BM,eAAgBL,EAAO1B,OAEzB,ICtBiC,sBDuBhC,OAAO4B,OAAOC,OAAO,GAAIJ,EAAO,CAC/BO,cAAeN,EAAO1B,OAExB,QACC,OAAOyB,IEZJQ,EAAiC,CACtCH,SAAU,IACVE,cAAe,KACfD,eAAgB,KA0BFG,EAvBgB,WAAuB,IAAD,EAC1B5D,aAAiBkD,EAAaS,GADJ,mBAC7CR,EAD6C,KACtCU,EADsC,KAepD,MAAO,CACNC,mBAAoBX,EACpBY,iBAdwB/D,eAAkB,SAACgE,GAC3CH,EAAS,CAAER,KD3BgB,gBC2BK3B,KC3BJ,GD2BUsC,MACpC,IAaFC,uBAX8BjE,eAAkB,SAACgE,GACjDH,EAAS,CAAER,KD9BuB,uBC8BK3B,KC/BX,GD+BiBsC,MAC3C,IAUFE,sBAR6BlE,eAAkB,SAACgE,GAChDH,EAAS,CAAER,KDjCsB,sBCiCK3B,KCnCV,GDmCgBsC,MAC1C,M,wBEjCEG,EAAQ,IAAIC,M,OAAMC,GAUTC,EAJc,WAC5B,OAAOtE,IAAM+C,aAAY,kBAAMoB,EAAMI,SAAQ,KC2B/BC,IC7BHC,ED6BGD,EA5Bf,SAAwBE,GACvB,IAAMH,EAAOD,IADiD,EAEpCtE,WAAuB,GAFa,mBAEvD2E,EAFuD,KAEhDC,EAFgD,KAIxDC,EAAO7E,eAAkB,WAC9B,IAAI8E,EAAW,EAEXH,EAAQ,EAAID,EAAMK,OAAS,EAC9BH,EAASE,GAGTF,EADAE,EAAWH,EAAQ,GAIpBJ,MACE,CAACI,EAAOC,EAAUF,EAAOH,IAEtBS,EAAUhF,eAAkB,WACjC4E,EAAS,KACP,CAACA,IAEJ,MAAO,CACN1E,QAASwE,EAAMC,GACfE,OACAG,Y,iBEWaC,EAjC6C,SAAC,GAKtD,IAAD,IAJLC,oBAIK,MAJU,EAIV,EAHLC,EAGK,EAHLA,SACArF,EAEK,EAFLA,UACiBsF,EACZ,EADJ,eACI,EACqBpF,WAAuBkF,GAD5C,mBACEG,EADF,KACSC,EADT,KAGCC,EAAgBvF,eACrB,SAACwF,GACA,IAAMxB,EACyB,KAA9BwB,EAAMC,cAAcJ,MACjBK,OAAOF,EAAMC,cAAcJ,OAC3B,EACJC,EAAStB,GACTmB,EAASnB,KAEV,CAACsB,EAAUH,IAGZ,OACC,yBACChE,cAAaiE,EACbtF,UAAWM,IAAWC,IAAM,MAAWP,GACvCuD,KAAK,SACLsC,IAAI,IACJC,IAAI,KACJP,MAAOA,EAAMvD,WACbqD,SAAUI,K,gBCiBEM,EA5C+C,SAAC,GAMxD,IALN/B,EAKK,EALLA,mBACAC,EAIK,EAJLA,iBACAE,EAGK,EAHLA,uBACAC,EAEK,EAFLA,sBAEK,IADL4B,eACK,SACL,OACC,uBACChG,UAAWM,IAAWC,IAAO,eAAR,eACnBA,IAAO,8BAAgCyF,KAGzC,yBAAOhG,UAAWO,IAAO,uBAAzB,aAEC,gBAAC,EAAD,CACCc,cAAY,kBACZrB,UAAWO,IAAM,aACjB6E,aAAcpB,EAAmBN,SL9BR,GK+BzB2B,SAAUpB,KAGZ,yBAAOjE,UAAWO,IAAO,uBAAzB,oBAEC,gBAAC,EAAD,CACCc,cAAY,yBACZrB,UAAWO,IAAM,aACjB6E,aAAcpB,EAAmBL,eLvCR,GKwCzB0B,SAAUlB,KAGZ,yBAAOnE,UAAWO,IAAO,uBAAzB,mBAEC,gBAAC,EAAD,CACCc,cAAY,wBACZrB,UAAWO,IAAM,aACjB6E,aAAcpB,EAAmBJ,cLhDR,GKiDzByB,SAAUjB,O,6EFzCHO,O,eAAAA,I,iBAAAA,I,0BAAAA,M,KAYZ,IAAMsB,EAAW,SAAC5C,GACjB,OAAQA,GACP,KAAKsB,EAAYuB,MAChB,OAAOA,IACR,KAAKvB,EAAYwB,UAChB,OAAOA,IACR,KAAKxB,EAAYyB,KAChB,OAAOA,MAsCKC,EAlCuC,SAAC,GAAuB,IAAD,EAApBC,EAAoB,EAApBA,OAAQjD,EAAY,EAAZA,MAAY,EAC5CnD,YAAwB,GADoB,mBACrEqG,EADqE,KAC3DC,EAD2D,OAEhCtG,WAC3CmD,GAH2E,mBAErEoD,EAFqE,KAErDC,EAFqD,KAuB5E,OAjBAxG,aAAgB,WACfsG,GAAY,GAEZ,IAAMG,EAAgBC,YAAW,WAChCF,EAAkBrD,KAChB,KAEGwD,EAAiBD,YAAW,WACjCJ,GAAY,KACV,KAEH,OAAO,WACNzD,cAAc4D,GACd5D,cAAc8D,MAEb,CAACxD,IAGH,uBACCrD,UAAWM,IAAWC,IAAM,QAAP,mBACnBA,IAAO,kBAAoB+F,GADR,cAEnB/F,IAAO,oBAAsBgG,GAFV,IAIrBO,IAAKb,EAASQ,MG8BFM,EA9EqC,WAAO,IAAD,EAMrDjD,IAJHE,EAFwD,EAExDA,mBACAC,EAHwD,EAGxDA,iBACAE,EAJwD,EAIxDA,uBACAC,EALwD,EAKxDA,sBALwD,EAQTM,EAAY,CAC3DV,EAAmBN,SACnBM,EAAmBL,eACnBK,EAAmBN,SACnBM,EAAmBJ,gBAJHlD,EARwC,EAQjDN,QAAsB2E,EAR2B,EAQ3BA,KAAMG,EARqB,EAQrBA,QARqB,EAeA/C,EACxDzB,GADO2B,EAfiD,EAejDA,YAAaW,EAfoC,EAepCA,OAAQG,EAf4B,EAe5BA,MAAOV,EAfqB,EAerBA,WAAYF,EAfS,EAeTA,KAIhDrC,aAAgB,WACXuC,IACHsC,IACA/B,OAEC,CAACP,EAAYsC,EAAM/B,IAEtB,IAAMjD,EAAUG,eACf,SAACC,GACAA,EAAE6G,iBACEzE,GACHY,IACA+B,KAEAlC,MAGF,CAACA,EAAQG,EAAO+B,EAAS3C,IAGpB0E,EAAiB/G,eACtB,SAACQ,GACA,OAAQA,GACP,KAAKsD,EAAmBN,SACvB,OAAOiB,EAAYyB,KACpB,KAAKpC,EAAmBL,eACvB,OAAOgB,EAAYuB,MACpB,KAAKlC,EAAmBJ,cACvB,OAAOe,EAAYwB,UACpB,QACC,MAAM,IAAIe,MAAM,gDAGnB,CACClD,EAAmBJ,cACnBI,EAAmBL,eACnBK,EAAmBN,WAIrB,OACC,uBAAK1D,UAAWO,IAAM,OACrB,gBAAC,EAAD,CAAOE,SAAU4B,EAAa3B,YAAaA,EAAaC,UAAW4B,GAClE,gBAAC,EAAD,CAAQ+D,QAAS/D,EAAMc,MAAO4D,EAAevG,MAE9C,gBAAC,EAAD,CACCsD,mBAAoBA,EACpBC,iBAAkBA,EAClBE,uBAAwBA,EACxBC,sBAAuBA,EACvB4B,SAAUzD,IAEX,gBAAC,EAAD,CAAQvC,UAAWO,IAAM,cAAmBR,QAASA,GACnDwC,EAAO,QAAU,W,iBCxEP4E,MARf,WACC,OACC,yBAAKnH,UAAWO,IAAM,KACrB,kBAAC,EAAD,QCKiB6G,QACU,cAA7BC,OAAOC,SAASC,UAEc,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACxB,2D,MCZHC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDkI5C,kBAAmBC,WACtBA,UAAUC,cAAcC,MACtBC,MAAK,SAAAC,GACLA,EAAaC,gBAEbC,OAAM,SAAAC,GACNC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.08faa023.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"clock\":\"styles_clock__2_xsk\",\"clock--running\":\"styles_clock--running__22COI\",\"clock__label\":\"styles_clock__label__3jvFx\",\"clock__label--bottom\":\"styles_clock__label--bottom__2mhOE\",\"clock__circle\":\"styles_clock__circle__3bClP\",\"clock__path\":\"styles_clock__path__1xyVs\",\"clock__path--thin\":\"styles_clock__path--thin__2vvf6\",\"clock__path-remaining\":\"styles_clock__path-remaining__K7WQA\",\"clock__path-remaining--thin\":\"styles_clock__path-remaining--thin__3SIZl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timer-setup\":\"styles_timer-setup__3lu0a\",\"timer-setup--disappearing\":\"styles_timer-setup--disappearing__28aP7\",\"timer-setup__label\":\"styles_timer-setup__label__2g8Ze\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"totoro\":\"styles_totoro__3zYs8\",\"totoro--hidden\":\"styles_totoro--hidden__FJBts\",\"totoro--changing\":\"styles_totoro--changing__e6rm8\",\"change\":\"styles_change__27ayD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timer\":\"styles_timer__3thNU\",\"timer__button\":\"styles_timer__button__2yzvJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__12U2K\"};","module.exports = __webpack_public_path__ + \"static/media/info.f3e1419d.mp3\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"styles_input__39iTu\"};","module.exports = __webpack_public_path__ + \"static/media/work.bf866514.gif\";","module.exports = __webpack_public_path__ + \"static/media/break.48ee6419.gif\";","module.exports = __webpack_public_path__ + \"static/media/long-break.6a93a05c.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"styles_app__1jJpR\"};","import * as React from 'react';\nimport classNames from 'classnames';\nimport styles from './styles.module.scss';\n\ninterface IButtonProps {\n\tchildren: React.ReactNode;\n\tonClick(event: React.MouseEvent): void;\n\tclassName?: string;\n}\n\nconst Button: React.FunctionComponent<IButtonProps> = ({\n\tchildren,\n\tonClick,\n\tclassName\n}) => {\n\tconst ref = React.useRef<HTMLButtonElement>(null);\n\n\tconst localOnClick = (e: React.MouseEvent) => {\n\t\tonClick(e);\n\t\tref.current?.blur();\n\t};\n\n\treturn (\n\t\t<button\n\t\t\tonClick={localOnClick}\n\t\t\tclassName={classNames(styles['button'], className)}\n\t\t\tref={ref}\n\t\t>\n\t\t\t{children}\n\t\t</button>\n\t);\n};\n\nexport default Button;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport styles from './styles.module.scss';\n\ninterface IClockProps {\n\ttimeLeft?: number;\n\tinitialTime?: number;\n\tisRunning: boolean;\n\tchildren?: React.ReactChild;\n}\n\nconst FULL_DASH_ARRAY = 283;\n\nconst calculateTimeFraction = (\n\tinitialTime: number,\n\ttimeLeft: number\n): number => {\n\tconst rawTimeFraction = (initialTime - timeLeft) / initialTime;\n\n\treturn rawTimeFraction;\n};\n\nconst formatTime = (totalSeconds: number): string => {\n\tconst hours: number = Math.floor(totalSeconds / 3600);\n\tconst minutes: number = Math.floor(totalSeconds / 60) - hours * 60;\n\tconst seconds: number = Math.floor(totalSeconds % 60);\n\n\tconst formattedTime = [hours, minutes, seconds]\n\t\t.filter((time, i) => !(i === 0 && time === 0))\n\t\t.map((n: number) => (n > 9 ? n.toString() : `0${n}`))\n\t\t.join(':');\n\n\treturn formattedTime;\n};\n\nconst Clock: React.FunctionComponent<IClockProps> = ({\n\ttimeLeft,\n\tinitialTime,\n\tisRunning,\n\tchildren\n}) => {\n\tconst dashArray: number =\n\t\tinitialTime && timeLeft\n\t\t\t? calculateTimeFraction(initialTime, timeLeft) * FULL_DASH_ARRAY\n\t\t\t: 0;\n\n\treturn (\n\t\t<div\n\t\t\tclassName={classNames(styles['clock'], {\n\t\t\t\t[styles['clock--running']]: isRunning\n\t\t\t})}\n\t\t>\n\t\t\t<svg viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t<g className={styles['clock__circle']}>\n\t\t\t\t\t<circle\n\t\t\t\t\t\tclassName={classNames(styles['clock__path'], {\n\t\t\t\t\t\t\t[styles['clock__path--thin']]: isRunning\n\t\t\t\t\t\t})}\n\t\t\t\t\t\tcx=\"50\"\n\t\t\t\t\t\tcy=\"50\"\n\t\t\t\t\t\tr=\"45\"\n\t\t\t\t\t></circle>\n\t\t\t\t\t<path\n\t\t\t\t\t\tstrokeDasharray={`${dashArray.toFixed(0)} ${FULL_DASH_ARRAY}`}\n\t\t\t\t\t\tclassName={classNames(styles['clock__path-remaining'], {\n\t\t\t\t\t\t\t[styles['clock__path-remaining--thin']]: isRunning\n\t\t\t\t\t\t})}\n\t\t\t\t\t\tdata-testid=\"clock-remaining-time\"\n\t\t\t\t\t\td=\"\n\t\t\t\t\t\t\tM 50, 50\n\t\t\t\t\t\t\tm -45, 0\n\t\t\t\t\t\t\ta 45,45 0 1,0 90,0\n\t\t\t\t\t\t\ta 45,45 0 1,0 -90,0\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t></path>\n\t\t\t\t</g>\n\t\t\t</svg>\n\t\t\t{children}\n\t\t\t<span\n\t\t\t\tclassName={classNames(styles['clock__label'], {\n\t\t\t\t\t[styles['clock__label--bottom']]: isRunning\n\t\t\t\t})}\n\t\t\t\tdata-testid=\"clock-label\"\n\t\t\t>\n\t\t\t\t{timeLeft ? formatTime(timeLeft) : '-'}\n\t\t\t</span>\n\t\t</div>\n\t);\n};\n\nexport default Clock;\n","import React from 'react';\n\nexport interface ITimerState {\n\tisFinished: boolean;\n\tcurrentTime: number;\n\tisOn: boolean;\n\ttoggle(): void;\n\treset(): void;\n}\n\nconst second = 1000;\n\nconst useTimer = (time: number): ITimerState => {\n\tconst [currentTime, setCurrentTime] = React.useState<number>(time);\n\tconst [isOn, setIsOn] = React.useState<boolean>(false);\n\tconst [isFinished, setIsFinished] = React.useState<boolean>(false);\n\n\tReact.useEffect(() => {\n\t\tsetCurrentTime(time);\n\t}, [time, setCurrentTime]);\n\n\tReact.useEffect(() => {\n\t\tlet interval: any;\n\t\tif (isOn) {\n\t\t\tinterval = setInterval(() => {\n\t\t\t\tsetCurrentTime((t: number): number => t - 1);\n\t\t\t}, second);\n\t\t}\n\t\treturn () => {\n\t\t\tclearInterval(interval);\n\t\t};\n\t}, [isOn, setCurrentTime]);\n\n\tReact.useEffect(() => {\n\t\tif (currentTime === 0) {\n\t\t\tsetIsOn(false);\n\t\t\tsetIsFinished(true);\n\t\t}\n\t}, [currentTime, setIsOn, setIsFinished]);\n\n\tconst toggle = React.useCallback(() => {\n\t\tif (isFinished) {\n\t\t\tsetIsFinished(false);\n\t\t}\n\t\tsetIsOn((o: boolean) => !o);\n\t}, [isFinished]);\n\n\tconst reset = React.useCallback(() => {\n\t\tsetCurrentTime(time);\n\t\tsetIsOn(false);\n\t\tsetIsFinished(false);\n\t}, [setIsOn, setIsFinished, setCurrentTime, time]);\n\n\treturn {\n\t\tisFinished,\n\t\treset,\n\t\ttoggle,\n\t\tcurrentTime,\n\t\tisOn\n\t};\n};\n\nexport default useTimer;\n","import {\n\t/* eslint-disable-next-line no-unused-vars */\n\tTimeAction,\n\tSET_WORK_TIME,\n\tSET_SHORT_BREAK_TIME,\n\tSET_LONG_BREAK_TIME\n} from './actions';\n\nexport interface ITimerSetupState {\n\tworkTime: number;\n\tshortBreakTime: number;\n\tlongBreakTime: number;\n}\n\nconst timeReducer = (state: ITimerSetupState, action: TimeAction) => {\n\tswitch (action.type) {\n\t\tcase SET_WORK_TIME:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tworkTime: action.time\n\t\t\t});\n\t\tcase SET_SHORT_BREAK_TIME:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tshortBreakTime: action.time\n\t\t\t});\n\t\tcase SET_LONG_BREAK_TIME:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tlongBreakTime: action.time\n\t\t\t});\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default timeReducer;\n","export const SET_WORK_TIME = 'SET_WORK_TIME';\nexport const SET_SHORT_BREAK_TIME = 'SET_SHORT_BREAK_TIME';\nexport const SET_LONG_BREAK_TIME = 'SET_LONG_BREAK_TIME';\n\nexport interface TimeAction {\n\ttype: string;\n\ttime: number;\n}\n","import * as React from 'react';\n/* eslint-disable-next-line no-unused-vars */\nimport timeReducer, { ITimerSetupState } from './reducer';\nimport {\n\tSET_WORK_TIME,\n\tSET_SHORT_BREAK_TIME,\n\tSET_LONG_BREAK_TIME\n} from './actions';\nimport { minute } from 'utils/constants';\n\nexport interface IPomodoroSetup {\n\ttimerConfiguration: ITimerSetupState;\n\tonWorkTimeChange: (minutes: number) => void;\n\tonShortBreakTimeChange: (minutes: number) => void;\n\tonLongBreakTimeChange: (minutes: number) => void;\n}\n\nconst initialState: ITimerSetupState = {\n\tworkTime: 50 * minute,\n\tlongBreakTime: 30 * minute,\n\tshortBreakTime: 10 * minute\n};\n\nconst usePomodoroTimersSetup = (): IPomodoroSetup => {\n\tconst [state, dispatch] = React.useReducer(timeReducer, initialState);\n\n\tconst onWorkTimeChange = React.useCallback((minutes: number): void => {\n\t\tdispatch({ type: SET_WORK_TIME, time: minutes * minute });\n\t}, []);\n\n\tconst onShortBreakTimeChange = React.useCallback((minutes: number): void => {\n\t\tdispatch({ type: SET_SHORT_BREAK_TIME, time: minutes * minute });\n\t}, []);\n\n\tconst onLongBreakTimeChange = React.useCallback((minutes: number): void => {\n\t\tdispatch({ type: SET_LONG_BREAK_TIME, time: minutes * minute });\n\t}, []);\n\n\treturn {\n\t\ttimerConfiguration: state,\n\t\tonWorkTimeChange,\n\t\tonShortBreakTimeChange,\n\t\tonLongBreakTimeChange\n\t};\n};\n\nexport default usePomodoroTimersSetup;\n","export const minute: number = 60;\n","import React from 'react';\nimport info from './info.mp3';\n\nconst sound = new Audio(info);\n\ninterface NotificationSound {\n\t(): void;\n}\n\nconst useNotificationSound = (): NotificationSound => {\n\treturn React.useCallback(() => sound.play(), []);\n};\n\nexport default useNotificationSound;\n","import * as React from 'react';\nimport useNotificationSound from 'hooks/useNotificationSound';\n\ninterface ICarouselIterator<T> {\n\tcurrent: T;\n\tnext(): void;\n\trestart(): void;\n}\n\nfunction useCarousel<T>(items: Array<T>): ICarouselIterator<T> {\n\tconst play = useNotificationSound();\n\tconst [index, setIndex] = React.useState<number>(0);\n\n\tconst next = React.useCallback(() => {\n\t\tlet newIndex = 0;\n\n\t\tif (index + 1 > items.length - 1) {\n\t\t\tsetIndex(newIndex);\n\t\t} else {\n\t\t\tnewIndex = index + 1;\n\t\t\tsetIndex(newIndex);\n\t\t}\n\n\t\tplay();\n\t}, [index, setIndex, items, play]);\n\n\tconst restart = React.useCallback(() => {\n\t\tsetIndex(0);\n\t}, [setIndex]);\n\n\treturn {\n\t\tcurrent: items[index],\n\t\tnext,\n\t\trestart\n\t};\n}\n\nexport default useCarousel;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport Work from './images/work.gif';\nimport Break from './images/break.gif';\nimport LongBreak from './images/long-break.gif';\nimport styles from './styles.module.scss';\n\n/* eslint-disable no-unused-vars */\nexport enum TotoroState {\n\tWork,\n\tBreak,\n\tLongBreak\n}\n/* eslint-enable no-unused-vars */\n\ninterface ITotoroProps {\n\thidden: boolean;\n\tstate: TotoroState;\n}\n\nconst getImage = (state: TotoroState): string => {\n\tswitch (state) {\n\t\tcase TotoroState.Break:\n\t\t\treturn Break;\n\t\tcase TotoroState.LongBreak:\n\t\t\treturn LongBreak;\n\t\tcase TotoroState.Work:\n\t\t\treturn Work;\n\t}\n};\n\nconst Totoro: React.FunctionComponent<ITotoroProps> = ({ hidden, state }) => {\n\tconst [changing, setChanging] = React.useState<boolean>(false);\n\tconst [debouncedState, setDebouncedState] = React.useState<TotoroState>(\n\t\tstate\n\t);\n\n\tReact.useEffect(() => {\n\t\tsetChanging(true);\n\n\t\tconst stateInterval = setTimeout(() => {\n\t\t\tsetDebouncedState(state);\n\t\t}, 300);\n\n\t\tconst changeInterval = setTimeout(() => {\n\t\t\tsetChanging(false);\n\t\t}, 1000);\n\n\t\treturn () => {\n\t\t\tclearInterval(stateInterval);\n\t\t\tclearInterval(changeInterval);\n\t\t};\n\t}, [state]);\n\n\treturn (\n\t\t<img\n\t\t\tclassName={classNames(styles['totoro'], {\n\t\t\t\t[styles['totoro--hidden']]: hidden,\n\t\t\t\t[styles['totoro--changing']]: changing\n\t\t\t})}\n\t\t\tsrc={getImage(debouncedState)}\n\t\t/>\n\t);\n};\n\nexport default Totoro;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport styles from './styles.module.scss';\n\ninterface ITimeInputProps {\n\tinitialValue?: number;\n\tonChange: (minutes: number) => void;\n\tclassName?: string;\n\t['data-testid']?: string;\n}\n\nconst TimeInput: React.FunctionComponent<ITimeInputProps> = ({\n\tinitialValue = 1,\n\tonChange,\n\tclassName,\n\t['data-testid']: testId\n}) => {\n\tconst [value, setValue] = React.useState<number>(initialValue);\n\n\tconst localOnChange = React.useCallback(\n\t\t(event: React.FormEvent<HTMLInputElement>) => {\n\t\t\tconst minutes =\n\t\t\t\tevent.currentTarget.value !== ''\n\t\t\t\t\t? Number(event.currentTarget.value)\n\t\t\t\t\t: 1;\n\t\t\tsetValue(minutes);\n\t\t\tonChange(minutes);\n\t\t},\n\t\t[setValue, onChange]\n\t);\n\n\treturn (\n\t\t<input\n\t\t\tdata-testid={testId}\n\t\t\tclassName={classNames(styles['input'], className)}\n\t\t\ttype=\"number\"\n\t\t\tmin=\"1\"\n\t\t\tmax=\"60\"\n\t\t\tvalue={value.toString()}\n\t\t\tonChange={localOnChange}\n\t\t/>\n\t);\n};\n\nexport default TimeInput;\n","import * as React from 'react';\n// eslint-disable-next-line no-unused-vars\nimport { IPomodoroSetup } from 'hooks/usePomodoroTimersSetup';\nimport TimeInput from 'components/TimeInput';\nimport { minute } from 'utils/constants';\nimport classNames from 'classnames';\nimport styles from './styles.module.scss';\n\ninterface ITimerSetupProps extends IPomodoroSetup {\n\tvisible?: boolean;\n}\n\nconst TimerSetup: React.FunctionComponent<ITimerSetupProps> = ({\n\ttimerConfiguration,\n\tonWorkTimeChange,\n\tonShortBreakTimeChange,\n\tonLongBreakTimeChange,\n\tvisible = true\n}) => {\n\treturn (\n\t\t<div\n\t\t\tclassName={classNames(styles['timer-setup'], {\n\t\t\t\t[styles['timer-setup--disappearing']]: !visible\n\t\t\t})}\n\t\t>\n\t\t\t<label className={styles['timer-setup__label']}>\n\t\t\t\tWork [min]\n\t\t\t\t<TimeInput\n\t\t\t\t\tdata-testid=\"work-time-input\"\n\t\t\t\t\tclassName={styles['timer__input']}\n\t\t\t\t\tinitialValue={timerConfiguration.workTime / minute}\n\t\t\t\t\tonChange={onWorkTimeChange}\n\t\t\t\t/>\n\t\t\t</label>\n\t\t\t<label className={styles['timer-setup__label']}>\n\t\t\t\tShort break [min]\n\t\t\t\t<TimeInput\n\t\t\t\t\tdata-testid=\"short-break-time-input\"\n\t\t\t\t\tclassName={styles['timer__input']}\n\t\t\t\t\tinitialValue={timerConfiguration.shortBreakTime / minute}\n\t\t\t\t\tonChange={onShortBreakTimeChange}\n\t\t\t\t/>\n\t\t\t</label>\n\t\t\t<label className={styles['timer-setup__label']}>\n\t\t\t\tLong break [min]\n\t\t\t\t<TimeInput\n\t\t\t\t\tdata-testid=\"long-break-time-input\"\n\t\t\t\t\tclassName={styles['timer__input']}\n\t\t\t\t\tinitialValue={timerConfiguration.longBreakTime / minute}\n\t\t\t\t\tonChange={onLongBreakTimeChange}\n\t\t\t\t/>\n\t\t\t</label>\n\t\t</div>\n\t);\n};\n\nexport default TimerSetup;\n","import * as React from 'react';\nimport Button from 'components/Button';\nimport Clock from 'components/Clock';\nimport useTimer from 'hooks/useTimer';\nimport usePomodoroTimersSetup from '../../hooks/usePomodoroTimersSetup';\nimport styles from './styles.module.scss';\nimport useCarousel from 'hooks/useCarousel';\nimport TimerSetup from 'components/TimerSetup';\nimport Totoro, { TotoroState } from 'components/Totoro';\n\ninterface ITimerProps {}\n\nconst Timer: React.FunctionComponent<ITimerProps> = () => {\n\tconst {\n\t\ttimerConfiguration,\n\t\tonWorkTimeChange,\n\t\tonShortBreakTimeChange,\n\t\tonLongBreakTimeChange\n\t} = usePomodoroTimersSetup();\n\n\tconst { current: initialTime, next, restart } = useCarousel([\n\t\ttimerConfiguration.workTime,\n\t\ttimerConfiguration.shortBreakTime,\n\t\ttimerConfiguration.workTime,\n\t\ttimerConfiguration.longBreakTime\n\t]);\n\n\tconst { currentTime, toggle, reset, isFinished, isOn } = useTimer(\n\t\tinitialTime\n\t);\n\n\tReact.useEffect(() => {\n\t\tif (isFinished) {\n\t\t\tnext();\n\t\t\ttoggle();\n\t\t}\n\t}, [isFinished, next, toggle]);\n\n\tconst onClick = React.useCallback(\n\t\t(e: React.MouseEvent): void => {\n\t\t\te.preventDefault();\n\t\t\tif (isOn) {\n\t\t\t\treset();\n\t\t\t\trestart();\n\t\t\t} else {\n\t\t\t\ttoggle();\n\t\t\t}\n\t\t},\n\t\t[toggle, reset, restart, isOn]\n\t);\n\n\tconst getTotoroState = React.useCallback(\n\t\t(initialTime: number) => {\n\t\t\tswitch (initialTime) {\n\t\t\t\tcase timerConfiguration.workTime:\n\t\t\t\t\treturn TotoroState.Work;\n\t\t\t\tcase timerConfiguration.shortBreakTime:\n\t\t\t\t\treturn TotoroState.Break;\n\t\t\t\tcase timerConfiguration.longBreakTime:\n\t\t\t\t\treturn TotoroState.LongBreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Initial time is not equal any of 3 stages');\n\t\t\t}\n\t\t},\n\t\t[\n\t\t\ttimerConfiguration.longBreakTime,\n\t\t\ttimerConfiguration.shortBreakTime,\n\t\t\ttimerConfiguration.workTime\n\t\t]\n\t);\n\n\treturn (\n\t\t<div className={styles['timer']}>\n\t\t\t<Clock timeLeft={currentTime} initialTime={initialTime} isRunning={isOn}>\n\t\t\t\t<Totoro hidden={!isOn} state={getTotoroState(initialTime)} />\n\t\t\t</Clock>\n\t\t\t<TimerSetup\n\t\t\t\ttimerConfiguration={timerConfiguration}\n\t\t\t\tonWorkTimeChange={onWorkTimeChange}\n\t\t\t\tonShortBreakTimeChange={onShortBreakTimeChange}\n\t\t\t\tonLongBreakTimeChange={onLongBreakTimeChange}\n\t\t\t\tvisible={!isOn}\n\t\t\t/>\n\t\t\t<Button className={styles['timer__button']} onClick={onClick}>\n\t\t\t\t{isOn ? 'RESET' : 'START'}\n\t\t\t</Button>\n\t\t</div>\n\t);\n};\n\nexport default Timer;\n","import React from 'react';\nimport Timer from 'components/Timer';\nimport styles from './styles.module.scss';\n\nfunction App() {\n\treturn (\n\t\t<div className={styles['app']}>\n\t\t\t<Timer />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' }\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then(registration => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/index';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}